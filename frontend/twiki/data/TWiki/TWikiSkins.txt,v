head	1.25;
access;
symbols;
locks; strict;
comment	@# @;


1.25
date	2014.05.01.07.55.49;	author TWikiContributor;	state Exp;
branches;
next	1.24;

1.24
date	2013.02.15.20.11.31;	author TWikiContributor;	state Exp;
branches;
next	1.23;

1.23
date	2013.02.15.20.11.31;	author TWikiContributor;	state Exp;
branches;
next	1.22;

1.22
date	2011.08.12.00.35.07;	author TWikiContributor;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.29.14.44.39;	author TWikiContributor;	state Exp;
branches;
next	1.20;

1.20
date	2008.08.03.22.17.50;	author TWikiContributor;	state Exp;
branches;
next	1.19;

1.19
date	2008.01.22.03.21.34;	author TWikiContributor;	state Exp;
branches;
next	1.18;

1.18
date	2007.01.16.04.11.59;	author TWikiContributor;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.01.05.55.15;	author TWikiContributor;	state Exp;
branches;
next	1.16;

1.16
date	2006.02.01.12.01.19;	author TWikiContributor;	state Exp;
branches;
next	1.15;

1.15
date	2004.07.25.23.29.00;	author PeterThoeny;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.12.18.11.37;	author PeterThoeny;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.12.06.15.00;	author PeterThoeny;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.26.20.58.00;	author PeterThoeny;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.08.07.14.49;	author PeterThoeny;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.05.04.59.21;	author PeterThoeny;	state Exp;
branches;
next	1.9;

1.9
date	2003.01.04.08.38.00;	author PeterThoeny;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.16.05.51.07;	author MikeMannix;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.14.08.43.22;	author PeterThoeny;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.10.00.07.45;	author MikeMannix;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.07.10.07.38;	author MikeMannix;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.30.22.08.21;	author MikeMannix;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.15.06.49.40;	author PeterThoeny;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.16.08.59.35;	author PeterThoeny;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.20.23.28.47;	author PeterThoeny;	state Exp;
branches;
next	;


desc
@none
@


1.25
log
@buildrelease
@
text
@%META:TOPICINFO{author="TWikiContributor" date="1398930949" format="1.1" version="25"}%
%STARTINCLUDE%
---+ TWiki Skins

_A skin overlays regular templates to provide specific look and feel to TWiki screens._

%TOC%

---++ Overview

TWiki uses TWikiTemplates files as the basis of all the screens it uses to interact with users. Each screen has an associated template file that contains the basic layout of the screen. This is then filled in by the code to generate what you see in the browser.

TWiki ships with a default set of template files that give a very basic, CSS-themable, look-and-feel. TWiki also includes support for _skins_ that can be selected to give different, more sophisticated, look and feel. A default TWiki installation will usually start up with the PatternSkin already selected. Skins may also be defined by third parties and loaded into a TWiki installation to give more options. To see how TWiki looks when __no__ skin is selected, [[%SCRIPTURL{"view"}%/%WEB%/%TOPIC%?skin=not_a_skin][view the current page with a non-existing skin]].

TWiki topic content is not affected by the choice of skin, however a skin can be defined to use a CSS (Cascading Style Sheet) which can provide a radically different appearance to the text layout.

__Relevant links on TWiki.org:__
   * TWiki:TWiki.TWikiSkinsSupplement - __%T% tip:__ supplemental documentation on TWiki skins
   * TWiki:Plugins.SkinPackage - list of all contributed skin packages
   * TWiki:Plugins.SkinDevelopment - discussion and feedback on contributed skins
   * TWiki:Plugins.SkinBrainstorming - open forum for new skin ideas
   * TWiki:Plugins.SkinPackageHowTo - template to create a new skin package

__See other types of extensions:__ TWikiAddOns, TWikiContribs, TWikiPlugins

---++ Changing the default TWiki skin

TWiki ships with the TopMenuSkin activated by default. You can set a skin for the whole site, a single web, a single topic, or for each user individually. This is done by setting the SKIN preferences setting to the name of a skin. If the skin you select doesn't exist, then TWiki will pick up the default templates. For example, to make the SKIN setting work across all topics and webs, put it in %LOCALSITEPREFS%.

Skins can cascade using a [[#ActivatingSkins][skin path]] explained below. One skin can be based on another one, and extensions can introduce additional screen elements. For example, the TagMePlugin adds tag elements to the TopMenuSkin, and the TopMenuSkin is based on the PatternSkin, resulting in this skin path:

<pre>
   * Set <nop>SKIN = tagme, topmenu, pattern
</pre>

---++ Defining Skins

You may want to define your own skin, for example to comply with corporate web guidelines, or because you have a aesthetic vision that you want to share. There are a couple of places you can start doing this.

The TWikiTemplates files used for skins are located in the =twiki/templates= directory and are named according to the skin: ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. Skin files may also be defined in TWiki topics - see TWikiTemplates for details.

To start creating a new skin, copy the default TWikiTemplates (like =view.tmpl=), or copy an existing skin to use as a base for your own skin. You should only need to copy the files you intend to customize, as TWiki can be configured to fall back to another skin if a template is not defined in your skin. Name the files as described above (for example =view.myskin.tmpl=).

If you use PatternSkin as your starting point, and you want to modify the layout, colors or even the templates to suit your own needs, have a look first at the topics PatternSkinCustomization and PatternSkinCssCookbook.

For your own TWiki skin we encourage you to show a small TWiki logo at the bottom of your skin:

| =&lt;a href="http://twiki.org/"&gt;&lt;img src="%<nop>PUBURL%/%<nop>SYSTEMWEB%/TWikiLogos/T-badge-88x31.gif" alt="This site is powered by the TWiki Enterprise Collaboration Platform" width="88" height="31" title="This site is powered by the TWiki Enterprise Collaboration Platform" border="0" /&gt;&lt;/a&gt;= | <span style="white-space: nowrap;">Renders as:</span>%BR% <a href="http://twiki.org/"><img src="%PUBURL%/%SYSTEMWEB%/TWikiLogos/T-badge-88x31.gif" alt="This site is powered by the TWiki Enterprise Collaboration Platform" width="88" height="31" title="This site is powered by the TWiki Enterprise Collaboration Platform" border="0" /></a> |

%T% __Note:__ TWiki.org has no marketing budget, e.g. we rely on TWiki users to spread the word of TWiki. *You can support the open source project by adding logos that point back to TWiki.org, and by mentioning TWiki in social media.*

The standard TWiki skins show the logo in the =%<nop>WEBCOPYRIGHT%= variable.

__%X% Note:__ Two skin names have _reserved_ meanings; =text= skin, and skin names starting with =rss= have [[#HardCodedSkins][hard-coded meanings]].

The following template files are used for TWiki screens, and are referenced in the TWiki core code. If a skin doesn't define its own version of a template file, then TWiki will fall back to the next skin in the skin path, or finally, to the default version of the template file.

(Certain template files are expected to provide certain TMPL:DEFs - these are listed in sub-bullets)
   * =addform= - used to select a new form for a topic
   * =attachagain= - used when refreshing an existing attachment
   * =attachnew= - used when attaching a new file to a topic
   * =attachtables= - defines the format of attachments at the bottom of the standard topic view
      * =ATTACH:files:footer=, =ATTACH:files:header=, =ATTACH:files:row=, =ATTACH:versions:footer=, =ATTACH:versions:header=, =ATTACH:versions:row=
   * =changeform= - used to change the form in a topic
   * =changes= - used by the =changes= script
   * =edit= - used for the edit screen
   * =form=
   * =formtables= - used to defined the format of forms
      * =FORM:display:footer=, =FORM:display:header=, =FORM:display:row=
   * =login= - used for loggin in when using the !TemplateLoginManager
      * =LOG_IN=, =LOG_IN_BANNER=, =LOG_OUT=, =LOGGED_IN_BANNER=, =NEW_USER_NOTE=, =UNRECOGNISED_USER=
   * =moveattachment= - used when moving an attachment
   * =oopsaccessdenied= - used to format Access Denied messages
      * =no_such_topic=, =no_such_web=, =only_group=, =topic_access=
   * =oopsattention= - used to format Attention messages
      * =already_exists=, =bad_email=, =bad_ver_code=, =bad_wikiname=, =base_web_missing=, =confirm=, =created_web=, =delete_err=, =invalid_web_color=, =invalid_web_name=, =in_a_group=, =mandatory_field=, =merge_notice=, =missing_action=, =missing_fields=, =move_err=, =missing_action=, =no_form_def=, =no_users_to_reset=, =notwikiuser=, =oversized_upload=, =password_changed=, =password_mismatch=, =problem_adding=, =remove_user_done=, =rename_err=, =rename_not_wikiword=, =rename_topic_exists=, =rename_web_err=, =rename_web_exists=, =rename_web_prerequisites=, =reset_bad=, =reset_ok=, =save_error=, =send_mail_error=, =thanks=, =topic_exists=, =unrecognized_action=, =upload_name_changed=, =web_creation_error=, =web_exists=, =web_missing=, =wrong_password=, =zero_size_upload=
   * =oopschangelanguage= - used to prompt for a new language when internationalisation is enabled
   * =oopsgeneric= - a basic dialog for user information; provides "ok" button only
   * =oopslanguagechanged= - used to confirm a new language when internationalisation is enabled
   * =oopsleaseconflict= - used to format lease Conflict messages
      * =lease_active=, =lease_old=
   * =preview= - used for previewing edited topics before saving
   * =rdiff= - used for viewing topic differences
   * =registernotify= - used by the user registration system
   * =registernotifyadmin= - used by the user registration system
   * =rename= - used when renaming a topic
   * =renameconfirm= - used when renaming a topic
   * =renamedelete= - used when renaming a topic
   * =renameweb= - used when renaming a web
   * =renamewebconfirm= - used when renaming a web
   * =renamewebdelete= - used when renaming a web
   * =searchbookview= - used to format inline search results in book view
   * =searchformat= - used to format inline search results
   * =search= - used by the =search= CGI script
   * =settings=
   * =view= - used by the =view= CGI script
   * =viewprint= - used to create the printable view

=twiki.tmpl= is a master template conventionally used by other templates, but not used directly by code.

__%X% Note:__ Make sure templates do not end with a newline. Any newline will expand to an empty =&lt;p /&gt;= in the generated html. It will produce invalid html, and may break the page layout. 

---+++ Partial customization, or adding in new features to an existing skin

You can use recursion in the TMPL:INCLUDE chain (e.g. =twiki.pattern.tmpl= contains =%<nop>TMPL:INCLUDE{"twiki"}%=, the templating system will include the next twiki.SKIN in the [[#ActivatingSkins][skin path]] (which is explained below). For example, to create a customization of pattern skin, where you _only_ want to remove the edit & WYSIWYG buttons from view page, you create only a =view.yourlocal.tmpl=:
<verbatim>
%TMPL:INCLUDE{"view"}%
%TMPL:DEF{"edit_topic_link"}%%TMPL:END%
%TMPL:DEF{"edit_wysiwyg_link"}%%TMPL:END%
</verbatim>
and then set =SKIN=yourlocal,pattern=.

---++ Variables in Skins

You can use [[TWikiTemplates#TemplateVariables][template variables]], TWikiVariables, and other predefined variables to compose your skins. Some commonly used variables in skins:

| *Variable:* | *Expanded to:* |
| =%<nop>WEBLOGONAME%= | Filename of web logo |
| =%<nop>WEBLOGOIMG%= | Image URL of web logo |
| =%<nop>WEBLOGOURL%= | Link of web logo |
| =%<nop>WEBLOGOALT%= | Alt text of web logo |
| =%<nop>WIKILOGOURL%= | Link of page logo |
| =%<nop>WIKILOGOIMG%= | Image URL of page logo |
| =%<nop>WIKILOGOALT%= | Alt text of page logo |
| =%<nop>WEBBGCOLOR%= | Web-specific background color, defined in the WebPreferences |
| =%<nop>WIKITOOLNAME%= | The name of your TWiki site |
| =%<nop>SCRIPTURL%= | The script URL of TWiki |
| =%<nop>SCRIPTURLPATH%= | The script URL path |
| =%<nop>SCRIPTSUFFIX%= | The script suffix, ex: =.pl=, =.cgi= |
| =%<nop>WEB%= | The name of the current web. |
| =%<nop>TOPIC%= | The name of the current topic. |
| =%<nop>WEBTOPICLIST%= | Common links of current web, defined in the WebPreferences. It includes a [[#JumpBox][Jump box]] |
| =%<nop>TEXT%= | The topic text, e.g. the content that can be edited |
| =%<nop>META{"form"}%= | [[TWikiForms][TWikiForm]], if any |
| =%<nop>META{"attachments"}%= | FileAttachment table |
| =%<nop>META{"parent"}%= | The topic parent |
| =%<nop>EDITTOPIC%= | Edit link |
| =%<nop>REVTITLE%= | The revision title, if any, ex: =(r1.6)= |
| =%<nop>REVINFO%= | Revision info, ex: =r1.6 - 24 Dec 2002 - 08:12 GMT - %WIKIUSERNAME%= |
| =%<nop>WEBCOPYRIGHT%= | Copyright notice, defined in the WebPreferences |
| =%<nop>BROADCASTMESSAGE%= | Broadcast message at the beginning of your view template, can be used to alert users of scheduled downtimes; can be set in %LOCALSITEPREFS% |

#GoBox
#JumpBox
---++ The Jump Box and Navigation Box

The default skins include a [[JumpBox][Jump Box]], to jump to a topic.

The box also understands URLs, e.g. you can type =http://www.google.com/= to jump to an external web site. The feature is handy if you build a skin that has a select box of frequently used links, like Intranet home, employee database, sales database and such. A little <nop>JavaScript gets into action on the =onchange= method of the select tag to fill the selected URL into the "Go" box field, then submits the form.

Here is an example form that has a select box and the Jump Box for illustration purposes. You need to have <nop>JavaScript enabled for this to work:

<form name="sample" action="%SCRIPTURLPATH{"view"}%/%WEB%/%TOPIC%">
<table border="0" cellpadding="5" bgcolor="#DDDDDD"><tr><td colspan="2">
Bare bones header, for demo only
</td></tr><tr><td>
Navigate:
</td><td>
<select name="sel" onchange="this.form.topic.value=this.options[this.selectedIndex].value; this.form.submit()">
<option selected="selected" value="">...</option>
<option value="http://twiki.org/">Intranet home</option>
<option value="%USERSWEB%.UserList">Employee index</option>
<option value="%USERSWEB%.%HOMETOPIC%">%USERSWEB% web</option>
<option value="%SYSTEMWEB%.%HOMETOPIC%">%SYSTEMWEB% web</option>
<option value="http://www.google.com/">Google</option>
<option value="http://www.yahoo.com/">Yahoo!</option>
</select>
</td></tr><tr><td>
Jump:
</td><td>
<input type="text" name="topic" size="16" />
</td></tr></table>
</form> 

__Note:__ Redirect to a URL only works if it is enabled in =configure= (Miscellaneous, ={AllowRedirectUrl}=).

---++ Using Cascading Style Sheets

CSS files are gererally attachments to the skin topic that are included in the the skin templates - in the case of PatternSkin in the template =styles.pattern.tmpl=.

   * To see how CSS is used in the default TWiki skin, see: PatternSkin
   * If you write a complete new skin, this is the syntax to use in a template file:
<verbatim>
<style type='text/css' media='all'>@@import url('%PUBURLPATH%/%SYSTEMWEB%/MySkin/mystyle.css');</style>
</verbatim>

---++ Attachment Tables
Controlling the look and feel of attachment tables is a little bit more complex than for the rest of a skin. By default, the attachment table is a standard TWiki table, and the look is controlled in the same way as other tables. In a very few cases you may want to change the _content_ of the table as well.

The format of standard attachment tables is defined through the use of special _TWiki template macros_ which by default, are defined in the =attachtables.tmpl= template using the =%TMPL:DEF= macro syntax described in TWikiTemplates. These macros are:
| *Macro* | *Description* |
| =ATTACH:files:header= | Standard title bar |
| =ATTACH:files:row= | Standard row |
| =ATTACH:files:footer= | Footer for all screens |
| =ATTACH:files:header:A= | Title bar for upload screens, with attributes column |
| =ATTACH:files:row:A= | Row for upload screen |
| =ATTACH:files:footer:A= | Footer for all screens |

The format of tables of file versions in the Upload screen can also be changed, using the macros:
| *Macro* | *Description* |
| =ATTACH:versions:header= | Header for versions table on upload screen |
| =ATTACH:versions:row= | Row format for versions table on upload screen |
| =ATTACH:versions:footer= | Footer for versions table on upload screen |

The =ATTACH:row= macros are expanded for each file in the attachment table, using the following special tags:
| *Tag* | *Description* |
| =%A_URL%= | =viewfile= URL that will recover the file |
| =%A_REV%= | Revision of this file |
| =%A_ICON%= | A file icon suitable for representing the attachment content |
| =%A_FILE%= | The name of the file. To get the 'pub' url of the file, use =%<nop>PUBURL%/%<nop>WEB%/%<nop>TOPIC%/%<nop>A_FILE%= |
| =%A_SIZE%= | The size of the file |
| =%A_DATE%= | The date the file was uploaded |
| =%A_USER%= | The user who uploaded it |
| =%A_COMMENT%= | The comment they put in when uploading it |
| =%A_ATTRS%= | The attributes of the file as seen on the upload screen e.g "h" for a hidden file |

---++ Packaging and Publishing Skins

See TWiki:Plugins/SkinPackagingHowTo and TWiki:Plugins/SkinDeveloperFAQ

---++ Browsing Installed Skins

You can try out all installed skins in the TWikiSkinBrowser.

#ActivatingSkins
---++ Activating Skins

TWiki uses a _skin search path_, which lets you combine skins additively. The skin path is defined using a combination of TWikiVariables and URL parameters.

TWiki works by asking for a template for a particular function - for example, 'view'. The detail of how templates are searched for is described in TWikiTemplates, but in summary, the templates directory is searched for a file called <code>view.</code><i>skin</i><code>.tmpl</code>, where _skin_ is the name of the skin e.g. =pattern=. If no template is found, then the fallback is to use =view.tmpl=. Each skin on the path is searched for in turn. For example, if you have set the skin path to =local,pattern= then =view.local.tmpl= will be searched for first, then =view.pattern.tmpl= and finally =view.tmpl=.

The basic skin is defined by a =SKIN= setting:

   * =Set SKIN = catskin, bearskin=

You can also add a parameter to the URL, such as =?skin=catskin,bearskin=:

   * %SCRIPTURL{view}%/%WEB%/%TOPIC%?skin=catskin,bearskin

Setting =SKIN= (or the =?skin= parameter in the URL) replaces the existing skin path setting, for the current page only. You can also _extend_ the existing skin path as well, using _covers_.

   * =Set COVER = ruskin=

This pushes a different skin to the front of the skin search path (so for our example above, that final skin path will be =ruskin, catskin, bearskin=). There is also an equivalent =cover= URL parameter. The difference between setting =SKIN= vs. =COVER= is that if the chosen template is not found (e.g., for included templates), =SKIN= will fall back onto the next skin in line, or the default skin, if only one skin was present, while =COVER= will always fall back onto the current skin.

An example would be invoking the printable mode, which is achieved by applying =?cover=print=. The =view.print.tmpl= simply invokes the =viewprint= template for the current skin which then can appropriately include all other used templates for the current skin. Where the printable mode be applied by using =SKIN=, all skins would have the same printable appearance.

The full skin path is built up as follows: =SKIN= setting (or =?skin= if it is set), then =COVER= setting is added, then =?cover=.

#ConditionalSkin
---++ Conditional Skin Activation

TWiki skins can be activated conditionally using IfStatements. For example, you might want to use a mobile skin for iPhone and Android user agents, and the default skin otherwise. This example uses the print skin on iPhone and Android:

<pre>
   * Set <nop>SKIN = %<nop>IF{
      "'%<nop>HTTP{"User-Agent"}%'~'*iPhone*' OR '%<nop>HTTP{"User-Agent"}%'~'*Android*'"
      then="print, pattern"
      else="topmenu, pattern"
     }%
</pre>

#HardCodedSkins
---++ Hard-Coded Skins

The =text= skin is reserved for TWiki internal use.

Skin names starting with =rss= also have a special meaning; if one or more of the skins in the skin path starts with 'rss' then 8-bit characters will be encoded as XML entities in the output, and the =content-type= header will be forced to =text/xml=.

__Related Topics:__ TWikiSkinBrowser, AdminDocumentationCategory, DeveloperDocumentationCategory, TWiki:TWiki.TWikiSkinsSupplement

-- __Contributors:__ TWiki:Main.PeterThoeny, TWiki:Main.MikeMannix, TWiki:Main.CrawfordCurrie
@


1.24
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1360959091" format="1.1" version="24"}%
d28 1
a28 1
TWiki ships with the TopMenuSkin activated by default. You can set a skin for the whole site, a single web, a single topic, or for each user individually. This is done by setting the SKIN preferences setting to the name of a skin. If the skin you select doesn't exist, then TWiki will pick up the default templates. For example, to make the SKIN setting work across all topics and webs, put it in Main.TWikiPreferences.
d46 1
a46 1
For your own TWiki skin you are encouraged to show a small 80x31 pixel <a href="http://twiki.org/"><img src="%PUBURL%/%SYSTEMWEB%/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a> logo at the bottom of your skin:
d48 3
a50 1
=&lt;a href="http://twiki.org/"&gt;&lt;img src="%<nop>PUBURL%/%<nop>SYSTEMWEB%/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /&gt;&lt;/a&gt;=
@


1.23
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1360959091" format="1.1" version="23"}%
d248 13
@


1.22
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1313109307" format="1.1" version="22"}%
d5 1
a5 1
_Skins overlay regular templates to give different looks and feels to TWiki screens._
d13 1
a13 1
TWiki ships with a default set of template files that give a very basic, CSS-themable, look-and-feel. TWiki also includes support for _skins_ that can be selected to give different, more sophisticated, look and feels. A default TWiki installation will usually start up with the PatternSkin already selected. Skins may also be defined by third parties and loaded into a TWiki installation to give more options. To see how TWiki looks when *no* skin is selected, [[%SCRIPTURL{"view"}%/%WEB%/%TOPIC%?skin=not_a_skin][view this topic with a non-existant skin]].
d15 1
a15 1
Topic text is not affected by the choice of skin, though a skin can be defined to use a CSS (Cascading Style Sheet), which can sometimes give a radically different appearance to the text.
d28 7
a34 1
TWiki default ships with the skin PatternSkin activated. You can set the skin for the whole site, a single web or topic, or for each user individually, by setting the SKIN variable to the name of a skin. If the skin you select doesn't exist, then TWiki will pick up the default templates.
d42 1
a42 1
To start creating a new skin, copy the default TWikiTemplates (like =view.tmpl=), or copy an existing skin to use as a base for your own skin. You should only need to copy the files you intend to customise, as TWiki can be configured to fall back to another skin if a template is not defined in your skin. Name the files as described above (for example =view.myskin.tmpl=.
d96 1
a96 1
   
d101 1
a101 1
---+++ Partial customisation, or adding in new features to an existing skin
d103 1
a103 2
You can use recusion in the TMPL:INCLUDE chain (eg twiki.classic.tmpl contains =%<nop>TMPL:INCLUDE{"twiki"}%=, the templating system will include the next twiki.SKIN in the skin path. 
For example, to create a customisation of pattern skin, where you _only_ want to remove the edit & WYSIWYG buttons from view page, you create only a =view.yourlocal.tmpl=:
a110 2
Because ClassicSkin and the default templates use the same Template definition names, you can over-ride the edit links in them (or any skin derived from them) using the same =view.yourlocal.tmpl= (just set SKIN=yourlocal,classic either in %USERSWEB%.TWikiPreferences for globally, or a Web's <nop>Webname.<nop>WebPreferences for a particular web) 

d223 1
@


1.21
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1273873869" format="1.1" version="21"}%
d32 1
a32 1
You may want to define your own skin, for example to comply with corporate web guidelines, or because you have a aesthetic vision that you want to share. There are a couple of places you an start doing this.
d157 1
a157 1
<option value="%USERSWEB%.%WIKIUSERSTOPIC%">Employee index</option>
@


1.20
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1168736701" format="1.1" version="20"}%
d127 1
a127 1
| =%<nop>WEBTOPICLIST%= | Common links of current web, defined in the WebPreferences. It includes a [[#GoBox][Go box]] |
d139 2
a140 1
---++ The "Go" Box and Navigation Box
d142 1
a142 1
The default skins include a [[GoBox]["Go" box]], also called "Jump" box, to jump to a topic.
d146 1
a146 1
Here is an example form that has a select box and the "Go" box for illustration purposes. You need to have <nop>JavaScript enabled for this to work:
@


1.19
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1168736701" format="1.1" version="19"}%
d93 1
a93 2

__%X% Note:__ It is best to create these templates for your skin. If you =TMPL:INCLUDE= the default templates, or templates from other skins, when you are defining your own skin, you run the risk that the included file might change and break your skin. 
@


1.18
log
@buildrelease
@
text
@d1 1
a1 2
%META:TOPICINFO{author="TWikiContributor" date="1168736701" format="1.1" version="18"}%
%TOC%
d3 1
a3 1
---# TWiki Skins
d7 2
d13 1
a13 1
TWiki ships with a default set of template files that give a basic look-and-feel. TWiki also includes support for _skins_ that can be selected to give different, more sophisticated, look and feels. A default TWiki installation will usually start up with the PatternSkin already selected. Skins may also be defined by third parties and loaded into a TWiki installation to give more options. To see how TWiki looks when *no* skin is selected, [[%SCRIPTURL{"view"}%/%WEB%/%TOPIC%?skin=not_a_skin][view this topic with a non-existant skin]].
d28 1
a28 1
TWiki default ships with the skin PatternSkin activated. If you want to modify the layout, colors or even the templates to suit your own needs, have a look first at the topics PatternSkinCustomization and PatternSkinCssCookbook.
d32 1
a32 1
You may want to define your own skin, for example to comply with corporate web guidelines, or because you have a aesthetic vision that you want to share.
d38 3
a40 1
For your own TWiki skin you are encouraged to show a small 80x31 pixel <a href="http://twiki.org/"><img src="%PUBURL%/%TWIKIWEB%/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /></a> logo at the bottom of your skin:
d42 1
a42 1
=&lt;a href="http://twiki.org/"&gt;&lt;img src="%<nop>PUBURL%/%<nop>TWIKIWEB%/TWikiLogos/T-logo-80x15.gif" alt="This site is powered by the TWiki collaboration platform" width="80" height="15" title="This site is powered by the TWiki collaboration platform" border="0" /&gt;&lt;/a&gt;=
d107 1
a107 1
Because ClassicSkin and the default templates use the same Template definition names, you can over-ride the edit links in them (or any skin derived from them) using the same =view.yourlocal.tmpl= (just set SKIN=yourlocal,classic either in %MAINWEB%.TWikiPreferences for globally, or a Web's <nop>Webname.<nop>WebPreferences for a particular web) 
d157 3
a159 3
<option value="%MAINWEB%.%WIKIUSERSTOPIC%">Employee index</option>
<option value="%MAINWEB%.%HOMETOPIC%">%MAINWEB% web</option>
<option value="%TWIKIWEB%.%HOMETOPIC%">%TWIKIWEB% web</option>
d179 1
a179 1
<style type='text/css' media='all'>@@import url('%PUBURLPATH%/%TWIKIWEB%/MySkin/mystyle.css');</style>
d202 1
a202 1
| =%A_URL%= | URL that will recover the file |
d205 1
a205 1
| =%A_FILE%= | The name of the file |
@


1.17
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1111929255" format="1.0" version="17"}%
d16 8
a23 1
__%T% Tip:__ TWiki:TWiki.TWikiSkinsSupplement on TWiki.org has supplemental documentation on TWiki Skins.
d33 1
a33 1
The TWikiTemplates files used for skins are located in the =twiki/templates= directory and are named according to the skin: ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. For example, the template used for pages generated by the =view= script with the =print= skin selected is =view.print.tmpl= (this is how the *Printable* control is implemented). Skin files may also be defined in TWiki topics - see TWikiTemplates for details.
d37 6
d67 1
d86 2
d90 15
a104 1
__%X% Note:__ You are strongly recommended *not* to =TMPL:INCLUDE= the default templates, or templates from other skins, when you are defining your own skin. If you do, you run the risk that the included file might change and break your skin.
d137 1
a137 1
---+++ The "Go" Box and Navigation Box
d139 3
a141 1
The default =%<nop>WEBTOPICLIST%= includes a "Go" box, also called "Jump" box, to jump to a topic. The box also understands URLs, e.g. you can type http://www.google.com/ to jump to an external web site. The feature is handy if you build a skin that has a select box of frequently used links, like Intranet home, employee database, sales database and such. A little <nop>JavaScript gets into action on the onSelect method of the select tag to fill the selected URL into the "Go" box field, then submits the form.
d146 5
a150 1
<table border="3"><tr><td>
d152 8
a159 9
 <option selected="selected" value="">Navigate...</option>
 <option value="http://www.twiki.org/">Intranet home</option>
 <option value="%MAINWEB%.%WIKIUSERSTOPIC%">Employee index</option>
 <option value="%MAINWEB%.%HOMETOPIC%">%MAINWEB% web</option>
 <option value="%TWIKIWEB%.%HOMETOPIC%">%TWIKIWEB% web</option>
 <option value="http://www.google.com/">Google</option>
 <option value="http://www.yahoo.com/">Yahoo!</option>
 </select>
Bare bones header for demo only
d161 3
a163 1
%WEBTOPICLIST%
d166 3
a168 1
 
d171 1
a171 1
CSS is used by PatternSkin, the TWiki skin that is selected in new installations. See that skin topic for information how CSS is used.
d173 2
a174 3
CSS files are gererally attachments to the skin topic that are included in the the skin templates - in the case of PatternSkin in the template =css.pattern.tmpl=.

Write in your main template:
d227 1
a227 1
You can also add a parameter to the URL, such as =?skin=catskin, bearskin=. Example activation of PrintSkin that generates a printable page:
d229 1
a229 1
   * %SCRIPTURL{view}%/%WEB%/%TOPIC%?skin=print
d231 1
a231 1
Setting =SKIN= (or the =?skin= parameter in the URL) replaces the existing skin path setting. You can also _extend_ the existing skin path as well, using _covers_.
d235 3
a237 1
This pushes a different skin to the front of the skin search path (so for our example above, that final skin path will be =ruskin, catskin, bearskin=). There is also an equivalent =cover= URL parameter.
@


1.16
log
@buildrelease
@
text
@d1 1
a1 1
%META:TOPICINFO{author="TWikiContributor" date="1111929255" format="1.0" version="16"}%
d35 37
a71 37
	* =addform= - used to select a new form for a topic
	* =attachagain= - used when refreshing an existing attachment
	* =attachnew= - used when attaching a new file to a topic
	* =attachtables= - defines the format of attachments at the bottom of the standard topic view
		* =ATTACH:files:footer=, =ATTACH:files:header=, =ATTACH:files:row=, =ATTACH:versions:footer=, =ATTACH:versions:header=, =ATTACH:versions:row=
	* =changeform= - used to change the form in a topic
	* =changes= - used by the =changes= script
	* =edit= - used for the edit screen
	* =form=
	* =formtables= - used to defined the format of forms
		* =FORM:display:footer=, =FORM:display:header=, =FORM:display:row=
	* =login= - used for loggin in when using the !TemplateLoginManager
		* =LOG_IN=, =LOG_IN_BANNER=, =LOG_OUT=, =LOGGED_IN_BANNER=, =NEW_USER_NOTE=, =UNRECOGNISED_USER=
	* =moveattachment= - used when moving an attachment
	* =oopsaccessdenied= - used to format Access Denied messages
		* =no_such_topic=, =no_such_web=, =only_group=, =topic_access=
	* =oopsattention= - used to format Attention messages
		* =already_exists=, =bad_email=, =bad_ver_code=, =bad_wikiname=, =base_web_missing=, =confirm=, =created_web=, =delete_err=, =invalid_web_color=, =invalid_web_name=, =in_a_group=, =mandatory_field=, =merge_notice=, =missing_action=, =missing_fields=, =move_err=, =missing_action=, =no_form_def=, =no_users_to_reset=, =notwikiuser=, =oversized_upload=, =password_changed=, =password_mismatch=, =problem_adding=, =remove_user_done=, =rename_err=, =rename_not_wikiword=, =rename_topic_exists=, =rename_web_err=, =rename_web_exists=, =rename_web_prerequisites=, =reset_bad=, =reset_ok=, =save_error=, =send_mail_error=, =thanks=, =topic_exists=, =unrecognized_action=, =upload_name_changed=, =web_creation_error=, =web_exists=, =web_missing=, =wrong_password=, =zero_size_upload=
	* =oopschangelanguage= - used to prompt for a new language when internationalisation is enabled
	* =oopslanguagechanged= - used to confirm a new language when internationalisation is enabled
	* =oopsleaseconflict= - used to format lease Conflict messages
		* =lease_active=, =lease_old=
	* =preview= - used for previewing edited topics before saving
	* =rdiff= - used for viewing topic differences
	* =registernotify= - used by the user registration system
	* =registernotifyadmin= - used by the user registration system
	* =rename= - used when renaming a topic
	* =renameconfirm= - used when renaming a topic
	* =renamedelete= - used when renaming a topic
	* =renameweb= - used when renaming a web
	* =renamewebconfirm= - used when renaming a web
	* =renamewebdelete= - used when renaming a web
	* =searchbookview= - used to format inline search results in book view
	* =searchformat= - used to format inline search results
	* =search= - used by the =search= CGI script
	* =settings=
	* =view= - used by the =view= CGI script
d104 1
a104 1
| =%<nop>BROADCASTMESSAGE%= | Broadcast message at the beginning of your view template, can be used to alert users of scheduled downtimes; can be set in %MAINWEB%.TWikiPreferences |
d187 1
a187 1
	* =Set SKIN = catskin, bearskin=
d191 1
a191 1
	* %SCRIPTURL{view}%/%WEB%/%TOPIC%?skin=print
d195 1
a195 1
	* =Set COVER = ruskin=
@


1.15
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1090798140" format="1.0" version="1.15"}%
d6 1
a6 1
_Skins overlay regular templates with alternate header/footer layouts; topic text is not affected_
d10 11
a20 1
Skins are customized TWikiTemplates files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example, the layout of the header and footer. Rendered text between header and footer does __not__ change. You can also use skins to define an alternate view, like a view optimized for printing.
d24 5
a28 1
Skin files are located in the =twiki/templates= directory and are named with the syntax: ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. For example, the *Printable* skin for the =view= template is =view.print.tmpl=.
d30 45
a74 1
Use the existing TWikiTemplates (like =view.tmpl=) or skin files as a base for your own skin, name it for example =view.myskin.tmpl=.
d81 4
d88 1
a88 1
| =%<nop>WEBBGCOLOR%= | Web specific background color, defined in the WebPreferences |
d91 1
d93 3
a95 3
| =%<nop>WEB%= | The name of the current web. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>INTURLENCODE{"%<nop>WEB%"}%= for proper handling in an internationalized environment |
| =%<nop>TOPIC%= | The name of the current topic. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>INTURLENCODE{"%<nop>TOPIC%"}%= for proper handling in an internationalized environment |
| =%<nop>WEBTOPICLIST%= | Common links of current web, defined in the WebPreferences. It includes a [[#GoBox]] |
d104 1
a104 1
| =%<nop>BROADCASTMESSAGE%= | Broadcast message at the beginning of your view template, can be used to alert users of scheduled downtimes; is set in TWikiPreferences |
d109 1
a109 1
The =%<nop>WEBTOPICLIST%= includes a "Go" box to jump to a topic. The box also understand URLs, e.g. you can type http://www.google.com/ to jump to an external web site. The feature is handy if you build a skin that has a select box of frequently used links, like Intranet home, employee database, sales database and such. A little <nop>JavaScript gets into action on the onSelect method of the select tag to fill the selected URL into the "Go" box field, then submits the form.
d113 1
a113 1
<form name="sample" action="%SCRIPTURL%/view%SCRIPTSUFFIX%/%INTURLENCODE{"%WEB%/%TOPIC%"}%">
d129 1
a129 1

d132 1
a132 1
Although work is underway at TWiki:Codev.CssClassNames, the regular templates files currently do not use style sheets.  Many skin developers, however, choose to use them; it helps in separating style from content.
d134 1
a134 1
Example: To use a style sheet for the broadcast message, add this to =view.myskin.tmpl=:
d136 1
d138 1
a138 13
<style type="text/css">
.broadcastmessage {
	 background: yellow; display:block;
	 border-style:solid;border-width: 2px;border-color:red;
}
.broadcastmessage strong {color: red}
</style>
</verbatim>

Then add a div tag to the =%<nop>BROADCASTMESSAGE%= variable located after the =#PageTop= anchor or after the opening form tag:

<verbatim>
<div class="broadcastmessage"> %BROADCASTMESSAGE% </div>
d142 1
a142 1
Controlling the look and feel of attachment tables is a little bit more complex than for the rest of a skin. By default the attachment table is a standard TWiki table, and the look is controlled in the same ay as other tables. In a very few cases you may want to change the _content_ of the table as well.
d144 1
a144 1
The format of standard attachment tables is defined through the use of special _TWiki template macros_ which by default are defined in the =templates/twiki.tmpl= template using the =%TMPL:DEF= macro syntax described in TWikiTemplates. These macros are:
d152 2
a153 1
The format of tables of file versions in the Upload screen are also formattable, using the macros:
d162 1
a162 1
| =%A_REV%= | Revision of this file e.g. "1.1" |
a170 2
Note: it is easy to change the look and feel for an entire site by editing the =twiki.tmpl= template file. However, to simplify upgrading, you should avoid doing this. Instead, write a skin-specific template file e.g. =attach.myskin.tmpl= and use =%TMPL:INCLUDE{attach.myskin.tmpl}%= to include it in each of your skin files. As long as it it included _after_ twiki.tmpl, your macro definitions will override the defaults defined there.

d177 1
a177 1
You can try all installed skins in TWikiSkinBrowser.
d181 19
a199 1
A skin can be activated in two ways:
d201 2
a202 2
	* Define the =SKIN= Preference variable in TWiki.TWikiPreferences, one of the WebPreferences, or in a user - %WIKIUSERNAME% - topic.
		* =Set SKIN = print=
d204 1
a204 3
	* Add =?skin=name= to the URL, for this example:
		* %SCRIPTURL%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%?skin=print (for the print view skin)
		* %SCRIPTURL%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%?skin=plain (for the plain view skin that has no header and footer)
d206 1
a206 1
The ==?skin=name== URL parameter overrides the SKIN Preference value.
d208 1
a208 2
-- TWiki:Main.PeterThoeny - 25 Jul 2004 %BR%
-- TWiki:Main.CrawfordCurrie - 30 Jun 2004 %BR%
d210 1
@


1.14
log
@none
@
text
@d1 143
a143 106
%META:TOPICINFO{author="PeterThoeny" date="1065982296" format="1.0" version="1.14"}%
%TOC%
%STARTINCLUDE%
---# TWiki Skins

_Skins overlay regular templates with alternate header/footer layouts; topic text is not affected_

---++ Overview

Skins are customized TWikiTemplates files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example, the layout of the header and footer. Rendered text between header and footer does __not__ change. You can also use skins to define an alternate view, like a view optimized for printing.

---++ Defining Skins

Skin files are located in the =twiki/templates= directory and are named with the syntax: ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. For example, the *Printable* skin for the =view= template is =view.print.tmpl=.

Use the existing TWikiTemplates (like =view.tmpl=) or skin files as a base for your own skin, name it for example =view.myskin.tmpl=.

---++ Variables in Skins

You can use [[TWikiTemplates#TemplateVariables][template variables]], TWikiVariables, and other predefined variables to compose your skins. Some commonly used variables in skins:

| *Variable:* | *Expanded to:* |
| =%<nop>WIKILOGOURL%= | Link of page logo |
| =%<nop>WIKILOGOIMG%= | Image URL of page logo |
| =%<nop>WIKILOGOALT%= | Alt text of page logo |
| =%<nop>WEBBGCOLOR%= | Web specific background color, defined in the WebPreferences |
| =%<nop>WIKITOOLNAME%= | The name of your TWiki site |
| =%<nop>SCRIPTURL%= | The script URL of TWiki |
| =%<nop>SCRIPTSUFFIX%= | The script suffix, ex: =.pl=, =.cgi= |
| =%<nop>WEB%= | The name of the current web. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>INTURLENCODE{"%<nop>WEB%"}%= for proper handling in an internationalized environment |
| =%<nop>TOPIC%= | The name of the current topic. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>INTURLENCODE{"%<nop>TOPIC%"}%= for proper handling in an internationalized environment |
| =%<nop>WEBTOPICLIST%= | Common links of current web, defined in the WebPreferences. It includes a [[#GoBox]] |
| =%<nop>TEXT%= | The topic text, e.g. the content that can be edited |
| =%<nop>META{"form"}%= | [[TWikiForms][TWikiForm]], if any |
| =%<nop>META{"attachments"}%= | FileAttachment table |
| =%<nop>META{"parent"}%= | The topic parent |
| =%<nop>EDITTOPIC%= | Edit link |
| =%<nop>REVTITLE%= | The revision title, if any, ex: =(r1.6)= |
| =%<nop>REVINFO%= | Revision info, ex: =r1.6 - 24 Dec 2002 - 08:12 GMT - %WIKIUSERNAME%= |
| =%<nop>WEBCOPYRIGHT%= | Copyright notice, defined in the WebPreferences |
| =%<nop>BROADCASTMESSAGE%= | Broadcast message at the beginning of your view template, can be used to alert users of scheduled downtimes; is set in TWikiPreferences |

#GoBox
---+++ The "Go" Box and Navigation Box

The =%<nop>WEBTOPICLIST%= includes a "Go" box to jump to a topic. The box also understand URLs, e.g. you can type http://www.google.com/ to jump to an external web site. The feature is handy if you build a skin that has a select box of frequently used links, like Intranet home, employee database, sales database and such. A little <nop>JavaScript gets into action on the onSelect method of the select tag to fill the selected URL into the "Go" box field, then submits the form.

Here is an example form that has a select box and the "Go" box for illustration purposes. You need to have <nop>JavaScript enabled for this to work:

<form name="sample" action="%SCRIPTURL%/view%SCRIPTSUFFIX%/%INTURLENCODE{"%WEB%/%TOPIC%"}%">
<table border="3"><tr><td>
<select name="sel" onchange="this.form.topic.value=this.options[this.selectedIndex].value; this.form.submit()">
 <option selected="selected" value="">Navigate...</option>
 <option value="http://www.twiki.org/">Intranet home</option>
 <option value="%MAINWEB%.%WIKIUSERSTOPIC%">Employee index</option>
 <option value="%MAINWEB%.%HOMETOPIC%">%MAINWEB% web</option>
 <option value="%TWIKIWEB%.%HOMETOPIC%">%TWIKIWEB% web</option>
 <option value="http://www.google.com/">Google</option>
 <option value="http://www.yahoo.com/">Yahoo!</option>
 </select>
Bare bones header for demo only
</td></tr><tr><td>
%WEBTOPICLIST%
</td></tr></table>
</form> 

---++ Using Cascading Style Sheets

The regular templates files currently do not use style sheets. Many skin developers choose to use them, it helps in separating style from content.

Example: To use a style sheet for the broadcast message, add this to =view.myskin.tmpl=:

<verbatim>
<style type="text/css">
.broadcastmessage {
	 background: yellow; display:block;
	 border-style:solid;border-width: 2px;border-color:red;
}
.broadcastmessage strong {color: red}
</style>
</verbatim>

Then add a div tag to the =%<nop>BROADCASTMESSAGE%= variable located after the =#PageTop= anchor or after the opening form tag:

<verbatim>
<div class="broadcastmessage"> %BROADCASTMESSAGE% </div>
</verbatim>

---++ Packaging and Publishing Skins

See TWiki:Plugins/SkinPackagingHowTo and TWiki:Plugins/SkinDeveloperFAQ

---++ Activating Skins

A skin can be activated in two ways:

	* Define the =SKIN= Preference variable in TWiki.TWikiPreferences, one of the WebPreferences, or in a user - %WIKIUSERNAME% - topic.
		* =Set SKIN = print=

	* Add =?skin=name= to the URL, for this example:
		* %SCRIPTURL%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%?skin=print (for the print view skin)
		* %SCRIPTURL%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%?skin=plain (for the plain view skin that has no header and footer)

The ==?skin=name== URL parameter overrides the SKIN Preference value.

-- PeterThoeny - 05 Jan 2003
@


1.13
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1065939300" format="1.0" version="1.13"}%
d41 1
a41 1
| =%<nop>BROADCASTMESSAGE%= | Broadcast message at the beginning of your view template, can be used to alert users of scheduled downtimes; is defined in TWikiPreferences |
d66 22
@


1.12
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1059253080" format="1.0" version="1.12"}%
d41 1
d69 1
a69 1
See TWiki:Plugins/SkinPackagingHowTo 
@


1.11
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1042010089" format="1.0" version="1.11"}%
d54 3
a56 3
 <option value="%MAINWEB%.TWikiUsers">Employee index</option>
 <option value="%MAINWEB%.WebHome">%MAINWEB% web</option>
 <option value="%TWIKIWEB%.WebHome">%TWIKIWEB% web</option>
@


1.10
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1041742761" format="1.0" version="1.10"}%
d30 2
a31 2
| =%<nop>WEB%= | The name of the current web. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>URLENCODE{"%<nop>WEB%"}%= for proper handling in an internationalized environment |
| =%<nop>TOPIC%= | The name of the current topic. __Note:__ It is recommended to URL-encode the variable in form actions with =%<nop>URLENCODE{"%<nop>TOPIC%"}%= for proper handling in an internationalized environment |
d49 1
a49 1
<form name="sample" action="%SCRIPTURL%/view%SCRIPTSUFFIX%/%URLENCODE{"%WEB%/%TOPIC%"}%">
@


1.9
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1041669480" format="1.0" version="1.9"}%
d30 2
a31 4
| =%<nop>WEB%= | The name of the current web |
| =%<nop>WEBURLENCODED%= | The name of the current web, URL encoded (for form action) |
| =%<nop>TOPIC%= | The name of the current topic |
| =%<nop>TOPICURLENCODED%= | The name of the current topic, URL encoded (for form action) |
d49 1
a49 1
<form name="sample" action="%SCRIPTURL%/view%SCRIPTSUFFIX%/%WEBURLENCODED%/%TOPICURLENCODED%">
d83 1
a83 1
-- PeterThoeny - 03 Jan 2003
@


1.8
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="MikeMannix" date="1000619467" format="1.0" version="1.8"}%
d16 56
d85 1
a85 1
-- PeterThoeny - 14 Jul 2001 <br>
@


1.7
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="1000457002" format="1.0" version="1.7"}%
d6 1
a6 1
_Overlay regular templates with alternate header/footer layouts_
@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="MikeMannix" date="1000080465" format="1.0" version="1.6"}%
d10 1
a10 1
Skins are customized [[TWikiDocumentation#TWiki_Template_System][TWiki Templates]] files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example, the layout of the header and footer. Rendered text between header and footer does __not__ change. You can also use skins to define an alternate view, like a view optimized for printing.
d12 1
a12 1
--++ Defining Skins
@


1.5
log
@none
@
text
@d1 3
a3 1
%META:TOPICINFO{author="MikeMannix" date="999857258" format="1.0" version="1.5"}%
d6 1
a6 1
Skins are customized [[TWikiTemplates][TWikiTemplate]] files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example the layout of the header and footer. Note that the renderd text between header and footer does __not__ change. You can also use skins to define an alternate view, ex: a view optimized for printing.
d8 9
a16 1
Skin files are located in the ==twiki/template== directory and are name with this syntax: ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. For example, the ==print== skin for the ==view== template is ==view<font color="red">.print</font>.tmpl== (red color added for clarification).
d19 2
a20 1
	* Define the SKIN preference variable in TWiki.TWikiPreferences, one of the WebPreferences, or a user preference. Ex: 
d22 1
d27 1
a27 1
The ==?skin=name== URL parameter overrides the SKIN preference value.
@


1.4
log
@none
@
text
@d1 2
a2 2
%META:TOPICINFO{author="MikeMannix" date="999209301" format="1.0" version="1.4"}%
---## TWiki Skins
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="PeterThoeny" date="995179879" format="1.0beta2" version="1.3"}%
d4 1
a4 1
Skins are customized [[TWikiTemplates][TWikiTemplate]] files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example the layout of the header and footer. Note that the renderd text between header and footer does __not__ change. You can use skins also to define an alternate view, i.e. a view optimized for printing.
d6 1
a6 1
A skin file is located in the ==twiki/template== directory and has a name like ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl==. For example, the ==print== skin for the ==view== template is ==view<font color="red">.print</font>.tmpl== (red color added for clarification).
d9 3
a11 3
	* Define the SKIN preference variable in TWiki.TWikiPreferences, one of the WebPreferences, or a user preference. I.e. 
		* =Set SKIN = wikiwiki=
	* Add =?skin=name= to the URL, i.e. for this topic:
@


1.2
log
@none
@
text
@d1 1
d4 1
a4 1
Skins are customized template files. You can use skins to change the look of a %WIKITOOLNAME% topic, for example the layout of the header and footer. Note that the renderd text between header and footer does __not__ change. You can use skins also to define an alternate view, i.e. a view optimized for printing.
d6 1
a6 1
A skin file is located in the ==twiki/template== directory and has a name like ==&lt;scriptname&gt;.&lt;skin&gt;.tmpl== or ==&lt;scriptname&gt;.&lt;topicname&gt;.&lt;skin&gt;.tmpl==. For example, the ==print== skin for the ==view== template is ==view<font color="red">.print</font>.tmpl== (red color added for clarification).
d10 1
a10 1
		* <nop>Set SKIN = wikiwiki <br> *Note:* Who has time to create the classic =wikiwiki= skin?
d17 1
a17 1
-- PeterThoeny - 16 Mar 2001 <br>
@


1.1
log
@none
@
text
@d1 2
d5 1
a5 1
A skin file is located in the =twiki/template= directory and has a name like =&lt;scriptname&gt;.&lt;skin&gt;.tmpl= or =&lt;scriptname&gt;.&lt;topicname&gt;.&lt;skin&gt;.tmpl=. For example, the =print= skin for the =view= template is =view<font color="red">.print</font>.tmpl= (red color added for clarification).
d14 1
a14 1
The =?skin=name= URL parameter overrides the SKIN preference value.
d16 1
a16 1
-- Main.PeterThoeny - 20 Jan 2001 <br>
@
