%META:TOPICINFO{author="TWikiContributor" date="1531644500" format="1.1" version="17"}%
%STARTINCLUDE%
---+ TWiki Upgrade Guide

_This guide covers upgrading from a previous version of TWiki (such as TWiki-5.1) to TWiki-6.1_

%TOC%

---++ Overview

TWiki-6.1.0 is a minor release that brings many usability enhancements, strengthens TWiki as an application platform, and has enhanced security. Use this guide to upgrade a previous TWiki release to TWiki-6.1. Use the TWikiInstallationGuide if you do not have data to carry forward.

---++ Upgrade Requirements

   * Please review the AdminSkillsAssumptions before you upgrade TWiki
   * Review supplemental document TWiki:TWiki.TWikiUpgradeTo06x01 for latest information and experience notes.
   * To upgrade from a release prior to TWiki Release 01-Sep-2004, start with TWiki:TWiki.UpgradingTWiki on TWiki.org
   * To upgrade from a standard TWiki Release 01-Sep-2004 to the latest TWiki-6.1 Production Release, follow the instructions below
   * Once the upgrade has been applied, an existing earlier installation will still be able to read all the topics, but should not be used to write. Make sure you take a backup!

---++ Major Changes Compared to Earlier TWiki Releases

See %SEARCH{ "TWikiReleaseNotes" scope="topic" topic="TWikiReleaseNotes*" nonoise="on" format="$topic" separator=", " }%

#BackupRestorePlugin
---++ New Upgrade Option with !BackupRestorePlugin

TWiki now has a new solution to backup, restore and upgrade TWiki sites. It can be used via browser and on the command line. The BackupRestorePlugin is pre-installed in TWiki-5.1 and later releases; it can be installed in older TWiki releases as low as TWiki-2001-09-01 (Athens Release) to easily create a backup that can be restored on a new TWiki release. This offers an easy upgrade path for TWiki. Check TWiki:Plugins.BackupRestorePlugin for updates.

#ManualUpgradeProcedure
---++ Upgrade Procedure

The following steps are a rough guide to upgrading only. It is impossible to give detailed instructions, as what you have to do may depend on whether you can configure the webserver or not, and how much you have changed distributed files in your current TWiki release.

The main steps are:

   1 Install the new TWiki version, configure it, and get it to work similar to the old version
   1 Install additional extensions (plugins) -- make sure to use the latest versions
   1 Copy all the non-default webs from the old installation to the new
   1 Copy the users from old installation to the new including all their topics from Main
   1 Apply customizations to your skin (logos, menu bars etc)
   1 Apply preferences from old installation
   1 Switch-over

%T% After the extensions are installed (or upgraded) in step 2, take a "golden" backup. That will come in handy for your next patch or upgrade: By checking the differences between the golden copy and your production copy, you will be able to identify all the modifications that you have applied to the core or extensions.
   
---+++ Installation

   * Follow the installation instructions at TWiki:TWiki.TWikiInstallationGuide. Install the new release in a new directory. Do not install on top of the old release.
   * Use the [[%SCRIPTURL{configure}%][configure]] script to configure TWiki.
      * If you are upgrading from a 4.x.x release, you can carry over the configure settings from the old release.
      * You need to run configure and save the configuration once when you upgrade as this will update the altered and added settings.
      * You can also choose to start with a fresh configuration and walk through all the settings using your old =twiki/lib/LocalSite.cfg= as a reference. This way you will not have old obsolete settings in the new =LocalSite.cfg=.
      * If at any time during the installation you want to start over from fresh, delete the =LocalSite.cfg= file and re-run configure.
   * Additional resources
      * TWiki:TWiki.InstallingTWiki#OtherPlatforms
      * TWiki:TWiki.ApacheConfigGenerator
      * TWiki:TWiki.SettingFileAccessRightsLinuxUnix
      * If you upgrade from an older TWiki your =lib/TWiki.cfg= from the old TWiki installation is a good resource for some of the settings you will need but you cannot reuse the old TWiki.cfg.
   * Make sure you have a working basic TWiki before you continue

---+++ Install Extensions

   * From TWiki-4.1.0 and on, the [[%SCRIPTURLPATH{"configure"}%][configure]] script which you ran during installation supports installation of additional plugins.
   * Manual installation is possible. Follow the instruction on the plugin page at twiki.org.
   * Check the plugin topics from your old TWiki installation. There may be plugin settings that you want to transfer to the new TWiki installation.
     %BR% __%H% Hint:__ For an easier upgrade later on, set the plugin preferences settings in the [[%LOCALSITEPREFS%]] topic, not in the plugin topic. To identify the plugin, prefix the name of the setting with the capitalized name of the plugin. For example, to change the =DEFAULT_TYPE= setting of the CommentPlugin, create a =COMMENTPLUGIN_DEFAULT_TYPE= setting in <nop>%LOCALSITEPREFS%.
   * Typical plugin settings you may have altered.
      * CommentPlugin - Set DEFAULT_TYPE
      * EditTablePlugin - Set CHANGEROWS, Set QUIETSAVE, and Set EDITBUTTON
      * InterwikiPlugin - Set RULESTOPIC
      * InterWikis - If you added your own rules you should save this topic and not overwrite it.
      * SlideShowPlugin - Make sure you did not change the embedded 'Default Slide Template' If you did you should save it. It is a bad idea to do. It is better to define your own slide show templates as separate topics that do not get overwritten when you upgrade.
      * SmiliesPlugin - Did you add your own smileys?
      * TablePlugin - Set TABLEATTRIBUTES.
   * Remember that a plugin must be activated in [[%SCRIPTURLPATH{"configure"}%][configure]].
   * To avoid having to re-apply plugin settings each time you upgrade a plugin or TWiki itself, define the altered plugin settings in <nop>%LOCALSITEPREFS% instead.

---+++ Copy your old webs to new TWiki

   * Webs come in pairs, such as =twiki/data/Engineering= (for page content) and =twiki/pub/Engineering= (for attachments).
   * When upgrading from Cairo or earlier it may be necessary to unlock the rcs files in data and pub directories from the old installation using the following shell commands:
      * =find data -name '*,v' -exec rcs -u -M '{}' \;=
      * =find pub -name '*,v' -exec rcs -u -M '{}' \;=
   * Copy your local webs over to the data and pub directories of the new install. Do not copy the default webs: TWiki, Main, Trash, Sandbox, _default, and _empty.
   * Make sure all data and pub files and directories are owned by the webserver user.
   * __Note:__ TWiki's WebChanges topics depend on the file timestamp. If you touch the .txt files make sure to preserve the timestamp, or to change them in the sequence of old file timestamps.

---+++ Copy Users And Their Topics From Main Web

   * Copy all the topics from the Main web and corresponding pub/Main directories from the old TWiki to the new TWiki but do not overwrite any of the new topics already inside the new Main directory!
   * Manually merge all the users from the old =Main.TWikiUsers= topic to the new TWiki. If you upgrade from Cairo you can simply use the old file and add the missing new system users to the list of users. If you upgrade from TWiki-4.0.x simply use the old topic. Starting from 4.2.0 TWiki no longer ships with a =Main.TWikiUsers= topic. When you register the first user TWiki now checks for an existing =Main.TWikiUsers= and if it does not exist it gets created.
      * If you want users to be able to use a login ID other than their !WikiName, such as when using LDAP or SSO authentication, set the configure setting ={Register}{AllowLoginName}= to =1=.
   * If you use =data/.htpasswd= for authentication copy this file from the old TWiki to the new.
      * If you upgrade from Cairo and you are using the Htpasswd login manager, then note that email addresses for users have moved out of user topics and into the password file. There is a script that performs this extra upgrade step for you - see =tools/upgrade_emails.pl=.
   * The old Sandbox web may have a lot of useful topic and users may use it actively for drafts. Manually select the topics (remember the corresponding pub directories) from the old Sandbox web and copy them to the one of the new TWiki. Decide if you want to overwrite the sandbox homepage and left menu bar or keep the new.
   * If you added or removed fields from the user topic form you may also have tailored =TWiki.TWikiRegistration=. Make sure you either reuse the registration topic from the old installation or apply the same field changes to the new =TWiki.TWikiRegistration= topic.
   * Starting from 4.2.0 TWiki ships with =NewUserTemplate= and =UserForm= in the TWiki web. If you choose to tailor anything you are strongly advised to copy =NewUserTemplate= and =UserForm= to the Main web and tailor the Main web copies. TWiki will look for the =NewUserTemplate= in the Main web first and if it does not exist it uses the default from the TWiki web. By creating a =Main.NewUserTemplate= and its =Main.UserForm= you will not loose your tailorings next time you upgrade TWiki.
   * Make sure all data and pub files and directories are owned by the webserver user.

---+++ Apply Customizations To The Skin

   * Add Logos, update top bar and left bar as required.
   * Apply any desired changes to style sheets and templates. The default TopMenuSkin is based on the PatternSkin.
   * Additional resources:
      * TWiki:TWiki.UpgradingTWiki04x00PatchReleases
      * PatternSkinCustomization
      * PatternSkinCssCookbook      
   
---+++ Apply Preferences From Old Installation

   * Transfer any customized and local settings from [[%SYSTEMWEB%.TWikiPreferences]] to the topic pointed at by {LocalSitePreferences} ([[%LOCALSITEPREFS%]]). Per default this is =Main.TWikiPreferences=. This avoids having to write over files in the distribution on a later upgrade.
   * If you changed any of the topics in the original TWiki distribution, you will have to transfer your changes to the new install manually. There is no simple way to do this, though a suggestion is to use 'diff' to find changed files in the =data/TWiki= of the old and new TWiki installation, and transfer the changes into the new TWiki install. If you can run a GUI on your server, you may find that using a visual diff tool like !WinMerge, meld, kdiff3, xxdiff, etc. is helpful.
   * Compare the =WebPreferences= topics in the old TWiki Installation with the default from the new TWiki installation and add any new Preferences that may be relevant.
   * Compare the =WebLeftBar= topics in the old TWiki Installation with the default from the new TWiki installation and add any new feature that you desire.

---+++ Switch-Over

Once you have tested the new TWiki you can switch over to the new site.

__If the same domain and URL is used:__

   * Update the DNS settings of the TWiki domain with the IP address of the new TWiki server.
   * Keep in mind that the updated DNS is not seen immediately by all users at the same time. The DNS propagation can take several hours and depends on the time to live (TTL) setting. Because of this it is recommended to disable content update on the old server. You could simply rename or move all scripts in =twiki/bin= that allow content update, such as =attach=, =edit=, =manage=, =rename=, =save=, =upload=, =rest=. Alternatively, if you have a recent TWiki version on the old server you can set a =READONLYSKINMODE = 1= setting in =Main.TWikiPreferences= to turn the skin into read-only mode.

__If the domain or URL changes:__

   * Add a DNS setting for the new TWiki domain if needed.
   * Redirect users visiting the old TWiki to the new TWiki. The TWiki:Plugins.MovedSkin has been designed for that task. Install it on your old TWiki, and configure it with the proper URL of the new TWiki. After that, users on the old TWiki will see a yellow box informing them of the move, with a link to the new URL of the page visited.

---++ Customization of Special Pages

Some pages in the TWiki web are meant to be customized after choice of authentication. If you do not use the internal TWiki password manager the topics that contains the features for changing and resetting passwords and changing the email address should be changed to a note describing how to perform these tasks in your organization. If you have made such customizations remember to replace these topics in the TWiki web with the tailored versions from your old installation. The topics are:

   * =TWiki.ChangePassword=
   * =TWiki.ResetPassword=
   * =TWiki.ChangeEmailAddress=

---++ Upgrading from Cairo to TWiki-4 (additional advice)

---+++ Favicon

TWiki-4's PatternSkin introduces the use of the favicon feature which most browsers use to show a small icon in front of the URL and for bookmarks.

In TWiki-4 it is assumed that each web has a favicon.ico file attached to the !WebPreferences topic. When you upgrade from Cairo to TWiki-4 you do not have this file and you will get flooded with errors the error log of your web server. There are two solutions to this.

   * Attach a favicon.ico file to !WebPreferences in each web.
   * Preferred: Change the setting of the location of favicon.ico in !TWikiPreferences so all webs use the favicon.ico from the TWiki web. This is the fastest and easiest solution.

To change the location of favicon.ico in !TWikiPreferences to the TWiki web add the following setting to [[%LOCALSITEPREFS%]]:

<verbatim>
   * Set FAVICON = %PUBURLPATH%/%SYSTEMWEB%/%WEBPREFSTOPIC%/favicon.ico
</verbatim>

---+++ !TWikiUsers topic in Main web

Your old [[Main.TWikiUsers][Main.TWikiUsers]] topic will work in the new TWiki but you will need to ensure that the following four users from the TWikiUsersTemplate topic are copied to the existing !TWikiUsers topic in proper alphabetical order:

<verbatim>
   * TWikiContributor - 2005-01-01
   * TWikiGuest - guest - 1999-02-10
   * TWikiRegistrationAgent - 2005-01-01
   * UnknownUser - 2005-01-01
</verbatim>

What these users are:
   * !TWikiContributor - placeholder for a TWiki developer, and is used in TWiki documentation
   * !TWikiGuest - guest user, used as a fallback if the user can't be identified
   * !TWikiRegistrationAgent - special user used during the new user registration process
   * !UnknownUser - used where the author of a previously stored piece of data can't be determined

You additionally need to ensure that !TWikiUsers has the =Set ALLOWTOPICCHANGE = !TWikiAdminGroup, !TWikiRegistrationAgent= access control setting. Otherwise people will not be able to register.

---++ Important Changes since TWiki-4.0.5

---+++ Supported Perl version

TWiki 4.0.5 worked on Perl version 5.6.X. Reports from users has shown that unfortunately TWiki 4.1.0 does not support Perl versions older then 5.8.0. It is the goal that TWiki should work on at least Perl version 5.6.X but none of the developers have had access to Perl installations older than 5.8.0.

Since TWiki 4.1.0 has some urgent bugs the development team decided to release TWiki 4.1.1 without resolving the issue with Perl 5.6.X. We will however address this and try and resolve it for a planned 4.1.2 release. The TWiki community is very interested in contributions from users that have fixes for the code which will enable TWiki to run on older versions of Perl.

See the [[http://twiki.org/cgi-bin/view/Codev/WhatVersionsOfPerlAreSupported][WhatVersionsOfPerlAreSupported]] topic to keep up to date with the discussion how to get back support for earlier Perl versions.

---+++ Template spec changed

Until TWiki 4.0.5 TWiki.TWikiTemplates the text inside template definition blocks (anything between =%<nop>TMPL:DEF{"block"}%= and =%<nop>TMPL:END%= was stripped of leading and trailing white space incl new lines.

This caused a lot of problems for skin developers when you wanted a newline before or after the block text.

From TWiki 4.1.0 this has changed so that white space is no longer stripped. Skins like !PatternSkin and !NatSkin have been updated so that they work with the new behavior. But if you use an older skin or have written your own you will most likely need to make some adjustments.

It is not difficult. The general rule is - if you get mysterious blank lines in your skin, the newline after the =%<nop>TMPL:DEF{"block"}%= needs to be removed. Ie. the content of the block must follow on the same line as the TMPL:DEF.

The spec change have the same impact on CommentPlugin templates where you may have to remove the first line break after the TMPL:DEF. See the CommentPluginTemplate for examples of how comment template definitions should look like in TWiki-4.1.X

An example: A !CommentPlugin template that adds a comment as appending a row to a table. Before the spec change this would work.

<verbatim>
<verbatim>
%TMPL:DEF{OUTPUT:tabletest}%%POS:BEFORE%
|%URLPARAM{"comment"}%| -- %WIKIUSERNAME% - %DATE% |
%TMPL:END%
</verbatim>
</verbatim>

From Twiki 4.1.0 the old template definition will add an empty line before the new table row. To fix it simply remove the new line before the table.

<verbatim>
<verbatim>
%TMPL:DEF{OUTPUT:tabletest}%%POS:BEFORE%|%URLPARAM{"comment"}%| -- %WIKIUSERNAME% - %DATE% |
%TMPL:END%
</verbatim>
</verbatim>

The advantage of the spec change is that now you can add leading and trailing white space including new lines. This was not possible before.

---++ Important Changes since TWiki-4.1.0

---+++ New location for session and other temporary files

*An upgrader upgrading to 4.1.1 should note the following important change*

The directory for passthrough files and session files have been replaced by a common directory for temporary files used by TWiki. Previously the two configure settings ={PassthroughDir}= and ={Sessions}{Dir}= were by default set to =/tmp=. These config settings have been replaced by ={TempfileDir}= with the default setting value =/tmp/twiki=. If the =twiki= directory does not exist twiki will create it first time it needs it.

It is highly recommended no longer to use the tmp directory common to other web applications and the new default will work fine for most. You may want to delete all the old session files in /tmp after the upgrade to 4.1.1. They all start with cgisess_. It is additionally highly recommended to limit write access to the ={TempfileDir}= for security reasons if you have non-admin users with login access to the webserver just like you would do with the other webserver directories.

---++ Important Changes since TWiki-4.1.2

---+++ New WYSIWYG Editor

TWiki now ships with a new WYSIWYG editor based on !TinyMCE which replaces the Kupu based editor. !TinyMCE is not a perfect Wysiwyg editor but it is magnitudes better than the previously used Kupu editor.

The !WysiwygPlugin that drives the engine behind both !TinyMCE has additionally been heavily improved so that fewer TWiki Applications are negatively affected by editing in WYSIWYG mode.

When !TinyMCEPlugin is enabled, the Edit button by default becomes WYSIWYG editing mode. A new Raw Edit link has been added to enable application developers to edit the good old way.

The WYSIWYG button has been removed.

---+++ NEWTOPICLINKSYMBOL removed

The NEWTOPICLINKSYMBOL preference which was deprecated in 4.1 has now been removed from the code. If you want to control the appearance of new links, you can use NEWLINKFORMAT.

---+++ !UserForm and !NewUserTemplate Customization

When a new user registers on TWiki his user topic is created based on the =NewUserTemplate= and =UserForm=.

The =NewUserTemplate= was located in the TWiki web and the =UserForm= in the Main web. When upgrading TWiki these were some of the topics you had to take care not to overwrite.

From 4.2.0 the =UserForm= and =NewUserTemplate= are distributed in the TWiki web. If you create the two in the Main web the Main web version will be used instead. So if you tailor the user topic format or the form then you should always copy the two files to the Main web and modify the ones in the Main web. When you later upgrade TWiki your tailored template and form will not be overwritten.

---+++ !TWikiUsers no longer distributed

The =Main.TWikiUsers= topic contains all the registered users. It is a topic you do not want to overwrite when you upgrade TWiki.

From 4.2.0 this file is no longer included in the TWiki distribution. When you register the first time TWiki creates the =Main.TWikiUsers= topic in the Main web if it does not exist already. This means that you can now upgrade TWiki without risk of overwriting the important =TWikiUsers= topic.

   * For new installers this makes no difference at all
   * For upgraders this is one less problem to worry about as your important !Main.TWikiUsers topic now no longer gets overwritten when upgrading.
   
---+++ New =working= directory

A new =working= directory which by default is located in the twiki root, has been introduced which contains:

   * registration_approvals - with 4.2.0 it is moved to here from the data directory.
   * tmp - so we now avoid having to fight with special access rights and /tmp directory that gets cleaned out when booting.
   * work_areas - with 4.2.0 it is moved to here from the pub directory. Configure automatically moved the directory when you upgrade.

Note: Remember to restrict access to this new directory when you upgrade.

The configure setting ={WorkingDir}= defines the container directory for temporary files, extensions' work areas, and intermediate registration data.  The default is =working= under your installation root.

Take care for that change if you run your own routine to delete obsolete session files, which will now be found under =working/tmp/cgisess*=.

---+++ New Internal Admin Login

TWiki 4.2 introduces a new _Internal Admin Login_ feature which uses "admin" (configurable) as username and the password used for configure to become temporary administrator. When you do a new installation you need to use this feature as !Main.TWikiAdminGroup is now access restricted by default to avoid security attacks during the hours an installation may take. From configure there is a link to the !TWikiAdminGroup topic and on !TWikiAdminGroup the step by step instructions are written in a yellow box. Our advice is not to remove this help text in case you need it later.

---++ Important Changes since TWiki-5.0.0

---+++ New !TopMenuSkin

The TopMenuSkin adds pulldown menus for better usability and corporate/modern look&amp;feel. This skin is based on the PatternSkin, which used the WebLeftBar in each web for navigation. The TopMenuSkin has a new WebTopBar that defines the menu structure in each web. A default menu is shown in case !WebTopBar is missing in a web, so you do not need to add a !WebTopBar topic to all your existing webs. See TopMenuSkin#WebSpecific instructions in case you need a customized menu structure in a specific web.

---++ Important Changes since TWiki-5.1.0

---+++ New Page Bookmarks Feature

A new bookmark feature has been introduced that replaces the personal left-bar links. Bookmarking a page is now a simple point and click operation: In the Account pulldown menu, select "Bookmark this page...". Existing bookmarks can be managed with an edit table in <nop>%USERSWEB%.&lt;wikiname&gt;Bookmarks topic, accessible via the "----- Bookmarks -----" pulldown menu of the Account pulldown.

The personal left-bar topics such as !JohnSmithLeftBar are no longer used. Ask users to select the "----- Bookmarks -----" pulldown menu of the Account pulldown to initially create the bookmarks topic, then to either bookmark pages, or to manually copy &amp; paste old left-bar links to the bookmarks topic.

---+++ User Profile Pages Tailored for Workplace

Previous user profile pages had a bare bones look and the form fields were more tailored for public TWiki sites. TWiki-5.1 brings a more visual/modern page layout with profile picture selector, as well as default form fields tailored for the workplace.

Changes to the [[%SYSTEMWEB%.UserForm]]:

__Renamed:__
   * =FirstName= to =First Name= (no change in =%META:FIELD name=)
   * =LastName= to =Last Name= (no change in =%META:FIELD name=)
   * =OrganisationName= to =Organization=
   * =OrganisationURL= to =URL=
   * =Profession= to =Titles=
   * =VoIP= to =Skype ID=
   * =State= to =Region=
__Removed:__
   * =Address=
   * =InstantMessaging (IM)=
   * =HomePage=
   * =Comment=
__Added:__
   * =Department=
   * =Status Update=

When upgrading user profile pages pay attention to the renamed and removed fields.

---++ Important Changes since TWiki-6.0.0

---+++ Spec Change for Empty DENYTOPICVIEW

From TWiki 4.0 and prior to 6.0, the syntax =* Set DENYTOPICVIEW <nop>=<nop>= (nothing) in a topic means deny nobody the topic view. The reason for this behavior is that it allows public access to a topic in a restricted web, e.g. having =* Set ALLOWWEBVIEW = <nop>%USERSWEB%.VipGroup= in !WebPreferences. This is not symmetric with the fact that an empty DENYWEBVIEW is the same as an undefined DENYWEBVIEW, hence confusing.

From TWiki 6.0 on, an empty DENYTOPICVIEW means the same as not defined. To open up a topic in a restricted web, you need to use =* Set ALLOWTOPICVIEW = <nop>%USERSWEB%.AllUsersGroup=. The [[%USERSWEB%.AllUsersGroup]] is new. It is a pseudo group containing all authenticated and unauthenticated users. You can use [[%USERSWEB%.AllAuthUsersGroup]] if you want to specify all authenticated users.

To keep publicly accessible topics in restricted webs publicly accessible, the =tools/eliminate_emptydenytopic= script is provided, which replaces =* Set DENYTOPIC&lt;action&gt; <nop>=<nop>= with =* Set ALLOWTOPIC&lt;action&gt; = <nop>%USERSWEB%.AllUsersGroup= in all topics in all webs.

__Note:__ See more changes since TWiki-6.0.0 in TWikiReleaseNotes06x00.

---++ Important Changes since TWiki-6.1.0

There are no significant changes affecting an upgrade from TWiki-6.0.x to TWiki-6.1.0.

__Note:__ See changes since TWiki-6.1.0 in TWikiReleaseNotes06x01.


%STOPINCLUDE%

__Related Topics:__ AdminDocumentationCategory, TWiki:TWiki.UpgradingTWiki, TWiki:TWiki.UpgradingTWiki04x00PatchReleases, TWiki:TWiki.InstallingTWiki#OtherPlatforms, TWiki:TWiki.ApacheConfigGenerator, TWiki:TWiki.SettingFileAccessRightsLinuxUnix

__Contributors:__ TWiki:Main.PeterThoeny, TWiki:Main.KennethLavrsen, TWiki:Main.CrawfordCurrie, TWiki:Main.HaraldJoerg, TWiki:Main.BobBagwill
