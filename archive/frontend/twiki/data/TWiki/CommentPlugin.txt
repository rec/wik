%META:TOPICINFO{author="TWikiContributor" date="1530837935" format="1.1" version="23"}%
---+!! Comment Plugin
<!--
   Contributions to this plugin are appreciated. Please update the plugin page at
   http://twiki.org/cgi-bin/view/Plugins/CommentPlugin or provide feedback at
   http://twiki.org/cgi-bin/view/Plugins/CommentPluginDev.
   If you are a TWiki contributor please update the plugin in the SVN repository.
-->
<sticky><div class="twikiTocFloat">
%TOC{title="Page contents"}%
</div></sticky>
*The Comment Plugin lets users quickly post comments to a page without an edit/preview/save cycle.*

__Related topics:__ CommentPluginTemplates, CommentPluginExamples

---++ Features

Inserts an edit box into the page that allows users to type in and save comments. Comments can be made
   * in different formats (as defined by a template),
   * in both forward and reverse chronological order,  
   * signed or unsigned, dated or undated (as defined by a template),
   * in other topics, or other positions within the current topic.

---++ Syntax

#StandardAttrs
Write =%<nop>COMMENT{<i>attributes</i>}%= anywhere in a TWiki topic.
%INCLUDE{"%SYSTEMWEB%.VarCOMMENT" section="comment_attributes"}%
(See also [[#MoreAttrs][additional attributes]])

---+++ Positioning the comment

=%COMMENT= supports several ways to specify _where_ a comment should be inserted in the target topic. This is referred to as the _location_ of the comment.

---++++ Location relative to <code>%COMMENT</code> tag

The default _location_ is the =%COMMENT= tag itself. For example:
<verbatim>
%COMMENT{type="below"}%
</verbatim>
will add comments in the current topic, directly below the =%COMMENT= tag.

---++++ Location relative to a TWiki anchor

The =target= attribute may specify a web, and may also specify an anchor within the target topic; for example, 
<verbatim>
%COMMENT{type="above" target="%USERSWEB%.PersonalRemarks#InsertHere"}%
</verbatim>
This uses a standard TWiki in-topic anchor as the insertion location. See %SYSTEMWEB%.TextFormattingRules for more about TWiki anchors.

---++++ Location relative to an arbitrary text string

Getting more sophisticated, you can also specify a regular expression for the target location using the =location= parameter. The target topic is searched for the regular expression, and the comment inserted relative to the string that the search matched. For example,
<verbatim>
%COMMENT{type="above" location="Flights of Fancy"}%
</verbatim>
will place comments above the first occurrence of the string =Flights of Fancy= in the current topic.

*Warning* of course, if a user's comment contains the string "Flights of Fancy" they may and up _changing the location_ for the next comment! Also, if you use a tag in the location, then you've just inserted another tag in the page that contains the =%COMMENT=! So be very careful how you specify the RE for =location=. Note that the RE is matched using perl "multiple line" mode, so ^ and $ match the start of a line and the end of a line respectively. %BR%
Also note that you cannot have the text =location="= just before the location.

I look forward to someone leveraging this feature to create - for example - threaded conversations using =%COMMENT=.

If you specify an anchor _and_ a =location=, the anchor will be ignored.

---+++ Default templates

Templates are used to define the "comment style" i.e. how comments appear in the page. The default is to add comments in "Blog like" style using bulleted lists, with the most recent comment at the top, but many other styles are available such as tables or Wiki thread mode comments. It is easy to define your own customer styles as well.

A set of default comment templates are shipped with the plugin - see also CommentPluginTemplates:
| *Template type* | *Description* |
| =top= | Comments, signed and dated (server time), added at top of the topic (the anchor is ignored) |
| =bottom= | Comments, signed and dated (server time), added at end of the target topic (the anchor is ignored) |
| =above= | Comments, signed and dated (server time), added immediately before the target anchor, or the =%COMMENT= if no anchor is specified |
| =below= | Comments, signed and dated (server time), added immediately below the target anchor, or the =%COMMENT= if no anchor is specified |
| =belowthreadmode= | Comments, signed and dated, added recurse after comment box |
| =threadmode= | Wiki thread mode comment, signed and dated (server time) |
| =tableprepend= | Comments, signed and dated (server time), formatted as an HTML table row, added below the anchor (which must be in an HTML &lt;table>) |
| =tableappend= | Comments, signed and dated (server time), formatted as an HTML table row, added above the anchor (which must be in an HTML &lt;table>) |
| =action= | Action added to action table directly above comment box (see [[#PluginInstallation][Plugin Installation Instructions]] below for important notes) |
| =table= | Tablerows adding on end |
| =toctalk= | Talk using TOC adding on end |
| =bookmark= | Create a list of annotated bookmarks |
| =return= | Post to a different topic and return |

Your local installation may add more template types as well - see [[#TemPlates][Customization]], below.

#TemPlates
---++ Customization

Customization of the comment plugin requires
   * familiarity with HTML forms
   * some familiarity with the [[%SYSTEMWEB%.TWikiTemplates][TWiki templating language]].

To define a comment type, you have to provide two simple template definitions in the template file; one for the prompt box, and one for the generated output. If we have a template type "mytype", these are named =PROMPT:mytype= and =OUTPUT:mytype= respectively. See =comments.tmpl= in the templates directory for examples.

The plugin picks up these template definitions from a standard TWiki template file, =templates/comments.tmpl=. This allows different templates to be defined for different TWiki skins.

#CustomTemplates
---+++ Defining custom templates

By default, =templates/comments.tmpl= includes the topic %SYSTEMWEB%.CommentPluginTemplate, which contains all the shipped standard templates and in turn includes %SYSTEMWEB%.<nop>UserCommentsTemplate that can include non-standard customizations.

This allows for several levels of customization:
   1 To *override all default templates, everywhere*, change =comments.tmpl= to include a different topic (this customization will be lost next time you upgrade, though).
   1 To add *site-wide local template customizations*, add them to %SYSTEMWEB%.UserCommentsTemplate (create if it does not exist yet). You can redefine the standard templates here if you want, and your definitions will override the standard definitions.
   1 To override templates on a *web-by-web basis*, add a topic =UserCommentsTemplate= to the web (this will replace %SYSTEMWEB%.<nop>UserCommentsTemplate)
   1 To override templates *for a specific skin*, add them to %SYSTEMWEB%.<nop>UserComments&lt;Skin&gt;Template (where &lt;Skin&gt; is the name of the skin with the first letter capitalized, e.g. Pattern)

#PerTopicTemplate
---+++ Per topic custom comment template

You can also define a *comment template in a topic*, by passing the topic location with a =templatetopic= parameter. For example:
<verbatim>
%COMMENT{type="blogpost" templatetopic="BlogPostCommentTemplate" target="%TOPIC%" button="Add comment" }%
</verbatim>

=templatetopic= accepts =topic= or =web.topic= syntax. See an example in [[CommentPluginExamples#TemplateTopic][CommentPluginExamples#TemplateTopic]].

If you use any topic other than %SYSTEMWEB%.UserCommentTemplate, it is critically important that you include this line at the end of your comment template topic:
<pre>
%<nop>TMPL:INCLUDE{"%<nop>SYSTEMWEB%.CommentPlugin"}%
</pre>
Without this line your templates will not be picked up.

%X% Templates are picked up by following the [[TWikiTemplates#Finding_Templates][standard TWiki rules]] for locating template files. Note that you can use =%<nop>TMPL:INCLUDE%= to include other files of templates. %BR%
%X% Note that from TWiki release 4.1.0 leading and trailing whitespace is no longer stripped. This means that when you upgrade to TWiki 4.1.X you may need to remove the first line break in your custom comment templates. See TWiki.TWikiReleaseNotes04x01 for more information.

---+++ Customization example

Provide both a =PROMPT= and an =OUTPUT= definition:

<verbatim>
%TMPL:DEF{PROMPT:myComment}%%TMPL:P{promptbox}%%TMPL:END%
%TMPL:DEF{OUTPUT:myComment}%%TMPL:P{outputoneliner}%%POS:TOP%
%TMPL:END%
</verbatim>

Call your custom comment with:

<verbatim>
%COMMENT{type="myComment"}%
</verbatim>

---+++ The =PROMPT= template

The =PROMPT= template defines the contents of an HTML form that is used to capture the comment. This form invokes the comment generator when submitted. Parameters to the comment generator are defined using standard HTML input fields, such as =input=, =textarea= and =select=. The user enters values for these parameters, and these are then available when the =OUTPUT= template is expanded, in the form of <code>%<nop>URLPARAM%</code>s.

*Note* that you must define a "submit" button if you want the form to work!

Only the input fields of the form need be defined. The plugin automatically generates the <code>&lt;form&gt;</code> and <code>&lt;/form&gt;</code> tags, with these two exceptions:

   1. The COMMENT has a =noform="on"= parameter. In this case, the =PROMPT= template has to specify the form tags and some additional hidden input fields. See CommentPluginExamples#noform example.
   1. The =PROMPT= template contains =%<nop>COMMENTFORMSTART%= and =%<nop>COMMENTFORMEND%=, which gives control over where to add the form tags and the hidden input fields:
      * =%<nop>COMMENTFORMSTART%= - HTML form start tag
      * =%<nop>COMMENTFORMEND%= - hidden input fields and HTML form end tag 

The latter feature can be used to define a =PROMPT= template that contains more than one form, such as a comment plugin prompt form, and a second form with a "notify authors" button (see TWiki:Plugins.NotifyAuthorsPlugin).

Example =PROMPT= template with two forms:

<verbatim>
%TMPL:DEF{PROMPT:two_form_demo}%
%COMMENTFORMSTART% <!-- form start tag -->
<textarea %DISABLED% rows="%rows|5%" cols="%cols|80%" name="comment"></textarea>
<input %DISABLED% type="submit" value="%button|Add comment%" class="twikiButton" />
%COMMENTFORMEND% <!-- hidden input fields and form end tag -->
%NOTIFYAUTHORS% <!-- second form with notify authors button -->
%TMPL:END%
</verbatim>

#MoreAttrs
---++++ Providing attribute values

If an attribute is given to the =%COMMENT= tag that is not one of the [[#StandardAttrs][standard attributes]], then that attribute is taken as the name of a parameter to be expanded in the =PROMPT= template. Expressions in the template of the form <code>%</code><i>param</i><code>|</code><i>default</i><code>%</code> (e.g. <code>%rows|3%</code>, <code>%button|Push me%</code>) are expanded to the values given in the <code>%COMMENT</code>. For example, if the =PROMPT= template 'example' contains:
<pre>
&lt;textarea rows=%rows|3% cols="%cols|50%" value="%tval|Rubbish%">
</pre>
and the %COMMENT tag is:
<pre>
%<nop>COMMENT{type="example" cols="75"}%
</pre>
then the template will be expanded as
<pre>
&lt;textarea rows="3" cols="75" value="Rubbish">
</pre>

---++++ Special variables

As well as support for all the usual TWiki variables in templates, the following special variables are supported in the =PROMPT= definition:
    | *Variable* | *Description* |
    | =%<nop>DISABLED%= | Set to 'disabled' when you cannot comment (e.g. in preview mode). |
    | =%<nop>MESSAGE%= | The text specified by =default=. This may be overridden by a helpful message when the prompt is DISABLED. |

*EXPERT* Note that when a comment is saved, the TWiki =save= script is invoked on the target topic, with a number of parameters provided by the comment form. Normally the CommentPlugin will provide these fields in the form, but experts can also provide the fields themselves in order to get finer control over what is submitted, or you might want to define your own HTML forms that do comment submission. The parameters that the CommentPlugin recognises are as follows:
| *CGI parameter* | *Description* |
| =comment_action= | Must be =save= to get the CommentPlugin to perform |
| =comment_type= | Type of the OUTPUT template |
| =comment_index= | Zero-based index of the %COMMENT in the source topic. Used to place a post relative to an existing %COMMENT. |
| =comment_anchor= | Anchor taken from the =target= spec |
| =comment_location= | As passed to %COMMENT |
| =comment_nonotify= | As passed to %COMMENT |
| =comment_remove= | Zero-based index of a %COMMENT to remove from the target topic |
| =comment_nopost= | As passed to %COMMENT |
| =comment_templatetopic= | As passed to %COMMENT |
Note that =comment_location= overrides =comment_anchor=, and both override =comment_index=. Example, shows an "I Approve" button that adds your approval signature to the end of the topic:
<verbatim>
<form method="post" action="%SCRIPTURL{save}%/%WEB%/%TOPIC%">
<input type="submit" value="I Approve" />
<input type="hidden" name="comment_action" value="save" />
<input type="hidden" name="comment_type" value="bottom" />
<input type="hidden" name="comment" value="I Approve" />
</form>
</verbatim>

---++++ Customization example!! with custom form template

Write a custom form in a topic.
   * In the form set the location of the prompt with =%<nop>COMMENTPROMPT%=; the prompt will be positioned here.
   * In %COMMENT use parameter =noform="on"=
   * In %COMMENT use parameter =templatetopic= to point to the topic with the form template

Example form:
<verbatim>
%TMPL:DEF{FORM:example}%
<form method="post" action="%SCRIPTURL{save}%/%BASEWEB%/%BASETOPIC%" enctype="application/x-www-form-urlencoded" name="examplecomment" id="examplecomment">
<input type="hidden" name="redirectto" value="%BASEWEB%.%BASETOPIC%" />
%COMMENTPROMPT%
</form>
%TMPL:END%
</verbatim>

Example comment:
<verbatim>
%COMMENT{noform="on" type="example" templatetopic="Sandbox.CommentPluginTemplateExample" target="%TOPIC%" button="Add comment" }%
</verbatim>

---+++ The =OUTPUT= template

The =OUTPUT= template defines the format for the text that actually gets embedded into the topic. All the usual TWiki variables are available in the =PROMPT= definition, but note that they get expanded _when the comment is inserted in the text_, so time, date and username will refer to the time and date when the comment was made, and the user who made it.

There are also four position tags that are used to indicate where the comment should be placed, relative to the =location= defined in the =%COMMENT= tag:

    | =%<nop>POS:TOP%= | If present, comments will be inserted *at the top of the topic* i.e. before any other text |
    | =%<nop>POS:BOTTOM%= | If present, comments will be inserted *at the end of the topic* i.e. after all existing text |
    | =%<nop>POS:BEFORE%= | If present, comments will be inserted <b>immediately before the =%<nop>COMMENT%= tag</b> |
    | =%<nop>POS:AFTER%= | If present, comments will be inserted <b>immediately after the =%<nop>COMMENT%= tag</b> |

Note that these position tags are obviously mutually exclusive. If you define more than one, the result is undefined. If none is present, the default is taken from the plugin setting =COMMENTPLUGIN_DEFAULT_TYPE=

    | =%<nop>COMMENTPROMPT%= | Use with a custom form. If present, the comment prompt will be positioned here. |
    
All the usual TWikiVariables that can be used in a topic template can also be used in an =OUTPUT= template. See %SYSTEMWEB%.TWikiVariables for details.

---++ Plugin Settings

%TWISTY{
 mode="div"
 showlink="Show details %ICONURL{toggleopen}% "
 hidelink="Hide details %ICONURL{toggleclose}% "
}%

Plugin settings are stored as preferences settings. Do __not__ change the settings here, they are here only for illustration purposes showing the default values. Define the settings in [[%LOCALSITEPREFS%]], in a !WebPreferences or in individual topics. For example, to customize the =COMMENTPLUGIN_DEFAULT_TYPE= setting, add a =* Set COMMENTPLUGIN_DEFAULT_TYPE = ...= bullet in <nop>%LOCALSITEPREFS%.

   * Name of file in the =twiki/templates= directory that contains the comment templates. The default 'comments.tmpl' automatically includes user templates from [[%SYSTEMWEB%.CommentPluginTemplate]], which in turn includes [[%SYSTEMWEB%.UserCommentsTemplate]].
      * Set COMMENTPLUGIN_TEMPLATES = comments

   * Default template type (above or below) :
      * Set COMMENTPLUGIN_DEFAULT_TYPE = above

%ENDTWISTY%

#PluginInstallation
---++ Plugin Installation Instructions

This plugin is pre-installed. TWiki administrators can upgrade the plugin as needed on the TWiki server.

%TWISTY{
 mode="div"
 showlink="Show details %ICONURL{toggleopen}% "
 hidelink="Hide details %ICONURL{toggleclose}% "
}%

   * For an __automated installation__, run the [[%SCRIPTURL{configure}%][configure]] script and follow "Find More Extensions" in the in the __Extensions__ section.
      * See the [[http://twiki.org/cgi-bin/view/Plugins/BuildContribInstallationSupplement][installation supplement]] on TWiki.org for more information.

   * Or, follow these __manual installation__ steps:
      * Download the ZIP file from the extension home on twiki.org (see below).
      * Unzip ==%TOPIC%.zip== in your twiki installation directory.
      * Set the ownership of the extracted directories and files to the webserver user.
      * Install the dependencies (if any).

   * Plugin __configuration and testing__: 
      * Run the [[%SCRIPTURL{configure}%][configure]] script and enable the plugin in the __Plugins__ section.
      * Configure additional plugin settings in the __Extensions__ section if needed.
      * Test if the installation was successful using the examples provided.


Note that if you want to use the =action= template then you must also:
   1 Install the TWiki:Plugins/ActionTrackerPlugin;
   1 Put the !CommentPlugin *before* the !ActionTrackerPlugin in the ={PluginsOrder}= configuration option (in =configure=)

%ENDTWISTY%

---++ Plugin Info

   * Set SHORTDESCRIPTION = Quickly post comments to a page without an edit/preview/save cycle.

%TABLE{ tablewidth="100%" columnwidths="170," }%
|  Plugin Author: | TWiki:Main.CrawfordCurrie http://www.c-dot.co.uk inspired by the work of TWiki:Main.DavidWeller and TWiki:Main.PeterMasiar |
|  Copyright: | &copy; 2004, TWiki:Main.CrawfordCurrie; %BR% &copy; 2009 TWiki:Main.SopanShewale; %BR% &copy; 2004-2018 TWiki:Main.PeterThoeny; %BR% &copy; 2004-2018 TWiki:TWiki.TWikiContributor |
|  License: | GPL ([[http://www.gnu.org/copyleft/gpl.html][GNU General Public License]]) |
|  Plugin Version: | 2018-07-05 |
%TWISTY{
 mode="div"
 showlink="Show Change History %ICONURL{toggleopen}%"
 hidelink="Hide Change History %ICONURL{toggleclose}% "
}%
%TABLE{ tablewidth="100%" columnwidths="170," }%
|  2018-07-05: | TWikibug:Item7841: Copyright update to 2018 |
|  2016-01-08: | TWikibug:Item7708: Copyright update to 2016 |
|  2015-01-10: | TWikibug:Item7604: Switch to GPL v3 |
|  2013-02-10: | TWikibug:Item7141: Control over where to add the form tag in comment PROMPT template -- TWiki:Main.PeterThoeny |
|  2013-02-06: | TWikibug:Item7139: Use BUBBLESIGNATUREFORMAT if defined, showing nice bubble boxes around around default comments -- TWiki:Main.PeterThoeny |
|  2013-01-09: | TWikibug:Item7123: Use TWISTY in plugin settings section, installation instructions and change history |
|  2013-01-04: | TWikibug:Item7115: Configurable signatures with profile pictures - use SIGNATUREFORMAT setting in default comment box signature -- TWiki:Main.PeterThoeny |
|  2012-11-16: | TWikibug:Item7039: Adapting it to the enhnaced TWiki::Func::getScriptUrl() -- TWiki:Main.HideyoImazu |
|  2012-11-12: | TWikibug:Item6967: Better layout of default comment box -- TWiki:Main.PeterThoeny |
|  2012-11-11: | TWikibug:Item7020: Categorize TWiki Variable COMMENT -- TWiki:Main.PeterThoeny |
|  2012-09-26: | TWikibug:Item6945: Send comment to multiple email addresses. |
|  2012-09-26: | TWikibug:Item6944: Get script URL with TWiki::Func::getMasterWebScriptUrl. |
|  2011-06-16: | TWikibug:Item6754: Fix for action comment template missing %<nop>ENDACTION% -- TWiki:Main.JohnRouillard |
|  2011-06-12: | TWikibug:Item6725: Change global package variables from "use vars" to "our"; adding NO_PREFS_IN_TOPIC in plugin package -- TWiki:Main.PeterThoeny |
|  2011-03-28: | TWikibug:Item6672 - doc improvements: Adding link to HIDE |
|  2010-12-11: | TWikibug:Item6530 - doc improvements -- TWiki:Main.ScottGutman |
|  2010-05-16: | TWikibug:Item6433 - doc improvements |
|  2010-03-19 | TWikibug:Item6404 Use $br in newline parameter for break tag instead of turning off encoding -- TWiki:Main/PeterThoeny |
|  2010-02-27 | TWikibug:Item6276 Cannot specify percentBRpercent for newline value -- TWiki:Main/SopanShewale |
|  2009-01-21 | TWikibug:Item6163 Fix for Comment Plugin losing data if target anchor is missing -- TWiki:Main/TimotheLitt and TWiki:Main/SopanShewale  |
|  03 Aug 2008 | The TWiki 4.2.1 release version | 
|  11 Apr 2008 | TWikibug:Item5518 corrected the template definition for bulletabove |
|  5 Sep 2007 | TWikibug:Item3689 corrected =location= handling TWikibug:Item4181 added VarCOMMENT TWikibug:Item4402 corrected access check |
|  22 Jun 2007 | Removed the long-deprecated =%TIME= (use %GMTIME instead). Minor doc changes |
|  14021 | TWikibug:Item3755 Fixed incorrect handling of line terminators when targeting an anchor |
|  13311 | Added option to define a comment template in any topic. Pass the topic location with =templatetopic= (either =topic= or =web.topic=). See an example in [[CommentPluginExamples#TemplateTopic][CommentPluginExamples:templatetopic]]. |
|  12822 | TWikibug:Item3598 minor doc fixes |
|  12750 | TWikibug:Item3510 added a note about the changed template spec in TWiki 4.1.0. Code remains unchanged |
|  11358 | TWikibug:Item2802 moved SHORTDESCRIPTION to .pm. Coded up TWiki:Main/PankajPant's suggestions as =nopost= and =remove=. Added default text for the %COMMENT as requested by TWiki:Main.AndyGlew |
|  11118 | TWikibug:Item2322 removed span tag around oneliner bullet output |
|  8788 | TWikibug:Item1465  Item1577: reverted 8433 to fix inclusion of correct user templates |
|  8787 | TWikibug:Item1573  renamed standard templates topic to avoid naming clash on Windows, where filenames are case-insensitive |
|  8433 | TWikibug:Item1465  Fix 'TWiki.' to '%<nop>TWIKIWEB%.'; also fixed include 'UserComments' to 'UserCommentsTemplate' (at least that is what the doc suggests) |
|  7427 | TWikibug:Item845  removed duplicate date in default comments; stick with server time |
|  7251 | TWikibug:Item810  fix for user template inclusion; reorganised templates to make customisation easier |
|  5906 | TWikibug:Item143  apache warning from comment plugin when !CommentsTmpl.txt not found |
|  5519 | !CommentPluginOnAnchorsBroken: incorporated !JacobEisinger's fix |
|  5518 | !CommentPluginOnAnchorsBroken: incorporated !OlivierBerger's fix |
|  5455 | On Niels Kodslo's prompting, removed the global recursion prevention that I believe is no longer needed. |
|  5280 | Removed templates, and some minor fixes |
|  5250 | Removed newlines from prompt box |
|  4902 | Changed to use viewauth. Moved templates into user topics. |
|  4901 | Added templates in user webs support |
|  4897 | Fixes for disabling during preview; re-enabled old legacy parameters |
|  4889 | Chopped down from !PeterMasiar version, removing several parameters, savecomment script, changing way templates are done. Major rewrite, atcherly. |
|  4882 | Update from !PeterMasiar's 2.0 version, plus documentation and small code improvements. |
|  4745 | 06 Mar 2002 initial commit |
%ENDTWISTY%
%TABLE{ tablewidth="100%" columnwidths="170," }%
|  Plugin Home: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC% |
|  Feedback: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Dev |
|  Appraisal: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Appraisal |

__Related Topics:__ CommentPluginTemplates, CommentPluginExamples, %SYSTEMWEB%.TWikiPreferences, %SYSTEMWEB%.TWikiPlugins
